/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.c
 #	source generated by 4D Plugin Wizard
 #	Project : Barcode
 #	author : miyako
 #	2012/11/25
 #
 # --------------------------------------------------------------------------------*/


#include "4DPluginAPI.h"
#include "4DPlugin.h"

#include "functions_zbar.h"
#include "functions_qren.h"
#include "functions_p417.h"
#include "functions_dmtx.h"
#include "functions_zint.h"

void PluginMain(int32_t selector, PA_PluginParameters params)
{
	try
	{
		int32_t pProcNum = selector;
		sLONG_PTR *pResult = (sLONG_PTR *)params->fResult;
		PackagePtr pParams = (PackagePtr)params->fParameters;

		CommandDispatcher(pProcNum, pResult, pParams); 
	}
	catch(...)
	{

	}
}

void CommandDispatcher (int32_t pProcNum, sLONG_PTR *pResult, PackagePtr pParams)
{
	switch(pProcNum)
	{
			// --- qrencode
			
		case 1 :
			MICRO_QRCODE_Data(pResult, pParams);
			break;
			
		case 2 :
			MICRO_QRCODE_Text(pResult, pParams);
			break;
			
		case 3 :
			QRCODE_Data(pResult, pParams);
			break;
			
		case 4 :
			QRCODE_Text(pResult, pParams);
			break;
			
			// --- zbar
			
		case 5 :
			BARCODE_Read_image(pResult, pParams);
			break;
			
			// --- pdf417
			
		case 6 :
			PDF417_Data(pResult, pParams);
			break;
			
		case 7 :
			PDF417_Text(pResult, pParams);
			break;
			
			// --- zint
			
		case 8 :
			BARCODE_Data(pResult, pParams);
			break;
			
		case 9 :
			BARCODE_Text(pResult, pParams);
			break;
			
			// --- data matrix
			
		case 10 :
			DMTX_Read_image(pResult, pParams);
			break;
			
		case 11 :
			DMTX_Text(pResult, pParams);
			break;
			
		case 12 :
			DMTX_Data(pResult, pParams);
			break;
			
	}
}
